From 72cf50c641dae5138fbf337bc763d07e1ec23152 Mon Sep 17 00:00:00 2001
From: Patrick Bellasi <patrick.bellasi@arm.com>
Date: Tue, 23 Jun 2015 09:15:10 +0100
Subject: [PATCH 20/38] WIP: sched/tune: add support to compute normalized
 energy

The current EAS implementation not only considers only energy variations,
while completely disregard the impact on performance for the selection of
a certain schedule candidate, but it also compute "absolute" energy variations.
In order to properly define a trade-off strategy between increased energy
consumption and performances benefits it is required to compare energy
variations with performance variations.
Thus, both these metrics must be expressed in comparable units.
While the performance variations are expressed in terms of capacity deltas,
which are expressed in the range [0..SCHED_LOAD_SCALE], the same scale is
not used for energy variations thus

This patch introduces a new the support function:
  schedtune_normalize_energy(energy_diff)
which returns a normalized value in the same range of capacity variations,
i.e. [0..SCHED_LOAD_SCALE].

NOTE: energy normalization requires some data from the Energy Model (EM) of
      the specific target. Since these values are expected to be provided
      at boot time along with the EM itself, for the time being this patch
      hard-code the values of the same ARM TC2 EM provided by the previous
      EAS patches.

Change-Id: I0cf3f91b6277911a2f1f796d03661fc2c04ab2df
Signed-off-by: Patrick Bellasi <patrick.bellasi@arm.com>
---
 kernel/sched/tune.c | 79 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 kernel/sched/tune.h | 10 +++++++
 2 files changed, 89 insertions(+)
 create mode 100644 kernel/sched/tune.h

diff --git a/kernel/sched/tune.c b/kernel/sched/tune.c
index 25377e0..8049e7e 100644
--- a/kernel/sched/tune.c
+++ b/kernel/sched/tune.c
@@ -1,7 +1,86 @@
 #include "sched.h"
+#include "tune.h"
 
 unsigned int sysctl_sched_cfs_boost __read_mostly = 0;
 
+/*
+ * System energy normalization constants
+ */
+struct target_nrg {
+	unsigned long min_power;
+	unsigned long max_power;
+	unsigned long nrg_shift;
+	unsigned long nrg_mult;
+};
+
+/*
+ * Target specific system energy normalization constants
+ * NOTE: These values are specific for ARM TC2 and they are derived from the
+ *       energy model data defined in: arch/arm/kernel/topology.c
+ */
+static struct target_nrg
+schedtune_target_nrg = {
+
+	/*
+	 * TC2 Min CPUs power:
+	 * all CPUs idle, all clusters in deep idle:
+	 *   0 * 3 + 0 * 2 + 10 + 25
+	 */
+	.min_power = 35,
+
+	/*
+	 * TC2 Max CPUs power:
+	 * all CPUs fully utilized while running at max OPP:
+	 *   1024 * 3 + 6997 * 2 + 4905 + 15200
+	 */
+
+	.max_power = 37171,
+
+	/*
+	 * Fast integer division by constant:
+	 *  Constant   : Max - Min       (C) = 37171 - 35 = 37136
+	 *  Precision  : 0.1%            (P) = 0.1
+	 *  Reference  : C * 100 / P     (R) = 3713600
+	 *
+	 * Thus:
+	 *  Shift bifs : ceil(log(R,2))  (S) = 26
+	 *  Mult const : round(2^S/C)    (M) = 1807
+	 *
+	 * This allows to compute the normalized energy:
+	 *   system_energy / C
+	 * as:
+	 *   (system_energy * M) >> S
+	 */
+	.nrg_shift = 26,	/* S */
+	.nrg_mult  = 1807,	/* M */
+};
+
+/*
+ * System energy normalization
+ * Returns the normalized value, in the range [0..SCHED_LOAD_SCALE],
+ * corresponding to the specified energy variation.
+ */
+int
+schedtune_normalize_energy(int energy_diff)
+{
+	long long normalized_nrg = energy_diff;
+	int max_delta;
+
+	/* Check for boundaries */
+	max_delta  = schedtune_target_nrg.max_power;
+	max_delta -= schedtune_target_nrg.min_power;
+	WARN_ON(abs(energy_diff) >= max_delta);
+
+	/* Scale by energy magnitude */
+	normalized_nrg <<= SCHED_LOAD_SHIFT;
+
+	/* Normalize on max energy for target platform */
+	normalized_nrg  *= schedtune_target_nrg.nrg_mult;
+	normalized_nrg >>= schedtune_target_nrg.nrg_shift;
+
+	return normalized_nrg;
+}
+
 int
 sysctl_sched_cfs_boost_handler(struct ctl_table *table, int write,
 		void __user *buffer, size_t *lenp,
diff --git a/kernel/sched/tune.h b/kernel/sched/tune.h
new file mode 100644
index 0000000..37e8772
--- /dev/null
+++ b/kernel/sched/tune.h
@@ -0,0 +1,10 @@
+
+#ifdef CONFIG_SCHED_TUNE
+
+extern int schedtune_normalize_energy(int energy);
+
+#else /* CONFIG_SCHED_TUNE */
+
+#define schedtune_normalize_energy(energy) energy
+
+#endif /* CONFIG_SCHED_TUNE */
-- 
1.9.1

