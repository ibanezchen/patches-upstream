From b0197465b407b35d0f1cde55ed2bea6459634ca5 Mon Sep 17 00:00:00 2001
From: Steve Muckle <steve.muckle@linaro.org>
Date: Wed, 14 Oct 2015 17:05:25 -0700
Subject: [PATCH 15/19] sched/cpufreq_sched: use kthread_bind_mask to set
 kthread affinity

Use kthread_bind_mask instead of set_cpus_allowed_ptr so that
userspace may not change the affinity of the kthread.

The name of the kthread is also changed since it does not currently
fit within TASK_COMM_LEN, and also does not uniquely identify itself
in the event that there are multiple cpufreq_sched policies running.
The new name includes the number of the first CPU in the policy at
the end of the thread name.

Signed-off-by: Steve Muckle <steve.muckle@linaro.org>
---
 kernel/sched/cpufreq_sched.c | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/kernel/sched/cpufreq_sched.c b/kernel/sched/cpufreq_sched.c
index f68a89e..db4b6fc 100644
--- a/kernel/sched/cpufreq_sched.c
+++ b/kernel/sched/cpufreq_sched.c
@@ -96,12 +96,6 @@ static int cpufreq_sched_thread(void *data)
 				__func__, gd->task->pid);
 	}
 
-	ret = set_cpus_allowed_ptr(gd->task, policy->related_cpus);
-	if (ret) {
-		pr_warn("%s: failed to set allowed ptr\n", __func__);
-		do_exit(-EINVAL);
-	}
-
 	/* main loop of the per-policy kthread */
 	do {
 		set_current_state(TASK_INTERRUPTIBLE);
@@ -267,11 +261,16 @@ static int cpufreq_sched_start(struct cpufreq_policy *policy)
 
 	if (cpufreq_driver_might_sleep()) {
 		/* init per-policy kthread */
-		gd->task = kthread_run(cpufreq_sched_thread, policy, "kcpufreq_sched_task");
+		gd->task = kthread_create(cpufreq_sched_thread, policy,
+					  "kschedfreq:%d",
+					  cpumask_first(policy->related_cpus));
 		if (IS_ERR_OR_NULL(gd->task)) {
-			pr_err("%s: failed to create kcpufreq_sched_task thread\n", __func__);
+			pr_err("%s: failed to create kschedfreq thread\n",
+			       __func__);
 			goto err;
 		}
+		kthread_bind_mask(gd->task, policy->related_cpus);
+		wake_up_process(gd->task);
 		init_irq_work(&gd->irq_work, cpufreq_sched_irq_work);
 	}
 
-- 
1.9.1

