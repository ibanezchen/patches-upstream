From dfff2890e3c674e6256503187410e676eb6d112f Mon Sep 17 00:00:00 2001
From: "freedom.tan" <freedom.tan@mediatek.com>
Date: Thu, 8 Oct 2015 14:41:52 +0800
Subject: [PATCH 110/110] 8173 power model measured by servo board

Provide power/engegy model measured by servo board.
Fix the order of ca53 and ca57/ca72 clusters.
---
 arch/arm64/kernel/topology.c | 153 +++++++++++++++++++++----------------------
 1 file changed, 74 insertions(+), 79 deletions(-)

diff --git a/arch/arm64/kernel/topology.c b/arch/arm64/kernel/topology.c
index 5883f9e..4dd9abf 100644
--- a/arch/arm64/kernel/topology.c
+++ b/arch/arm64/kernel/topology.c
@@ -224,44 +224,71 @@ out:
 struct cpu_topology cpu_topology[NR_CPUS];
 EXPORT_SYMBOL_GPL(cpu_topology);
 
-/*
- * ARM JUNO specific energy cost model data. There are no unit requirements for
- * the data. Data can be normalized to any reference point, but the
- * normalization must be consistent. That is, one bogo-joule/watt must be the
- * same quantity for all data, but we don't care what it is.
- */
-
 static struct idle_state idle_states_cluster_a53[] = {
-	{ .power = 56 }, /* arch_cpu_idle() (active idle) = WFI */
-	{ .power = 56 }, /* WFI */
-	{ .power = 56 }, /* cpu-sleep-0 */
-	{ .power = 17 }, /* cluster-sleep-0 */
-};
+	{ .power = 267.983178197, },
+	{ .power = 272.758323924, },
+	};
 
-static struct idle_state idle_states_cluster_a57[] = {
-	{ .power = 65 }, /* arch_cpu_idle() (active idle) = WFI */
-	{ .power = 65 }, /* WFI */
-	{ .power = 65 }, /* cpu-sleep-0 */
-	{ .power = 24 }, /* cluster-sleep-0 */
-};
+static struct idle_state idle_states_cluster_a72[] = {
+	{ .power = 447.388653218, },
+	{ .power = 330.78509476, },
+	};
 
 static struct capacity_state cap_states_cluster_a53[] = {
-        /* Power per cluster */
-	{ .cap =  235, .power = 26, }, /*  450 MHz */
-	{ .cap =  303, .power = 30, }, /*  575 MHz */
-	{ .cap =  368, .power = 39, }, /*  700 MHz */
-	{ .cap =  406, .power = 47, }, /*  775 MHz */
-	{ .cap =  447, .power = 57, }, /*  850 Mhz */
-};
+	/* Power per cluster */
+	{ .cap = 184, .power = 174, },
+	{ .cap = 256, .power = 107, },
+	{ .cap = 368, .power = 138, },
+	{ .cap = 399, .power = 145, },
+	{ .cap = 430, .power = 144, },
+	{ .cap = 512, .power = 150, },
+	{ .cap = 552, .power = 165, },
+	{ .cap = 573, .power = 164, },
+	};
+
+static struct capacity_state cap_states_cluster_a72[] = {
+	/* Power per cluster */
+	{ .cap = 256, .power = 56, },
+	{ .cap = 358, .power = 89, },
+	{ .cap = 512, .power = 78, },
+	{ .cap = 614, .power = 47, },
+	{ .cap = 716, .power = 101, },
+	{ .cap = 819, .power = 122, },
+	{ .cap = 921, .power = 103, },
+	{ .cap = 1024, .power = 150, },
+	};
 
-static struct capacity_state cap_states_cluster_a57[] = {
-        /* Power per cluster */
-	{ .cap =  417, .power = 24, }, /*  450 MHz */
-	{ .cap =  579, .power = 32, }, /*  625 MHz */
-	{ .cap =  744, .power = 43, }, /*  800 MHz */
-	{ .cap =  883, .power = 49, }, /*  950 MHz */
-	{ .cap = 1024, .power = 64, }, /* 1100 MHz */
-};
+static struct idle_state idle_states_core_a53[] = {
+	{ .power = 0, },
+	};
+
+static struct idle_state idle_states_core_a72[] = {
+	{ .power = 0, },
+	};
+
+static struct capacity_state cap_states_core_a53[] = {
+	/* Power per cpu */
+	{ .cap = 184, .power = 57, },
+	{ .cap = 256, .power = 156, },
+	{ .cap = 368, .power = 255, },
+	{ .cap = 399, .power = 299, },
+	{ .cap = 430, .power = 339, },
+	{ .cap = 512, .power = 472, },
+	{ .cap = 552, .power = 529, },
+	{ .cap = 573, .power = 574, },
+	};
+
+static struct capacity_state cap_states_core_a72[] = {
+	/* Power per cpu */
+	{ .cap = 256, .power = 316, },
+	{ .cap = 358, .power = 374, },
+	{ .cap = 512, .power = 640, },
+	{ .cap = 614, .power = 885, },
+	{ .cap = 716, .power = 1079, },
+	{ .cap = 819, .power = 1376, },
+	{ .cap = 921, .power = 1738, },
+	{ .cap = 1024, .power = 2207, },
+	};
 
 static struct sched_group_energy energy_cluster_a53 = {
 	.nr_idle_states = ARRAY_SIZE(idle_states_cluster_a53),
@@ -270,43 +297,11 @@ static struct sched_group_energy energy_cluster_a53 = {
 	.cap_states     = cap_states_cluster_a53,
 };
 
-static struct sched_group_energy energy_cluster_a57 = {
-	.nr_idle_states = ARRAY_SIZE(idle_states_cluster_a57),
-	.idle_states    = idle_states_cluster_a57,
-	.nr_cap_states  = ARRAY_SIZE(cap_states_cluster_a57),
-	.cap_states     = cap_states_cluster_a57,
-};
-
-static struct idle_state idle_states_core_a53[] = {
-	{ .power = 6 }, /* arch_cpu_idle() (active idle) = WFI */
-	{ .power = 6 }, /* WFI */
-	{ .power = 0 }, /* cpu-sleep-0 */
-	{ .power = 0 }, /* cluster-sleep-0 */
-};
-
-static struct idle_state idle_states_core_a57[] = {
-	{ .power = 15 }, /* arch_cpu_idle() (active idle) = WFI */
-	{ .power = 15 }, /* WFI */
-	{ .power = 0  }, /* cpu-sleep-0 */
-	{ .power = 0  }, /* cluster-sleep-0 */
-};
-
-static struct capacity_state cap_states_core_a53[] = {
-        /* Power per cpu */
-	{ .cap =  235, .power =  33, }, /*  450 MHz */
-	{ .cap =  302, .power =  46, }, /*  575 MHz */
-	{ .cap =  368, .power =  61, }, /*  700 MHz */
-	{ .cap =  406, .power =  76, }, /*  775 MHz */
-	{ .cap =  447, .power =  93, }, /*  850 Mhz */
-};
-
-static struct capacity_state cap_states_core_a57[] = {
-        /* Power per cpu */
-	{ .cap =  417, .power = 168, }, /*  450 MHz */
-	{ .cap =  579, .power = 251, }, /*  625 MHz */
-	{ .cap =  744, .power = 359, }, /*  800 MHz */
-	{ .cap =  883, .power = 479, }, /*  950 MHz */
-	{ .cap = 1024, .power = 616, }, /* 1100 MHz */
+static struct sched_group_energy energy_cluster_a72 = {
+	.nr_idle_states = ARRAY_SIZE(idle_states_cluster_a72),
+	.idle_states    = idle_states_cluster_a72,
+	.nr_cap_states  = ARRAY_SIZE(cap_states_cluster_a72),
+	.cap_states     = cap_states_cluster_a72,
 };
 
 static struct sched_group_energy energy_core_a53 = {
@@ -316,26 +311,26 @@ static struct sched_group_energy energy_core_a53 = {
 	.cap_states     = cap_states_core_a53,
 };
 
-static struct sched_group_energy energy_core_a57 = {
-	  .nr_idle_states = ARRAY_SIZE(idle_states_core_a57),
-	  .idle_states    = idle_states_core_a57,
-	  .nr_cap_states  = ARRAY_SIZE(cap_states_core_a57),
-	  .cap_states     = cap_states_core_a57,
+static struct sched_group_energy energy_core_a72 = {
+	  .nr_idle_states = ARRAY_SIZE(idle_states_core_a72),
+	  .idle_states    = idle_states_core_a72,
+	  .nr_cap_states  = ARRAY_SIZE(cap_states_core_a72),
+	  .cap_states     = cap_states_core_a72,
 };
 
 /* sd energy functions */
 static inline
 const struct sched_group_energy * const cpu_cluster_energy(int cpu)
 {
-	return cpu_topology[cpu].cluster_id ? &energy_cluster_a53 :
-			&energy_cluster_a57;
+	return cpu_topology[cpu].cluster_id ? &energy_cluster_a72 :
+			&energy_cluster_a53;
 }
 
 static inline
 const struct sched_group_energy * const cpu_core_energy(int cpu)
 {
-	return cpu_topology[cpu].cluster_id ? &energy_core_a53 :
-			&energy_core_a57;
+	return cpu_topology[cpu].cluster_id ? &energy_core_a72 :
+			&energy_core_a53;
 }
 
 const struct cpumask *cpu_coregroup_mask(int cpu)
-- 
1.9.1

