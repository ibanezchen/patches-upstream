From 2707e03e7270201c62a9e43f6c425b67bc1615d2 Mon Sep 17 00:00:00 2001
From: Kirill Tkhai <ktkhai@odin.com>
Date: Mon, 31 Aug 2015 15:12:56 +0300
Subject: [PATCH 008/110] sched/core: Delete PF_EXITING checks from
 cpu_cgroup_exit() callback

cgroup_exit() is not called from copy_process() after commit:

  e8604cb43690 ("cgroup: fix spurious lockdep warning in cgroup_exit()")

from do_exit(). So this check is useless and the comment is obsolete.

Signed-off-by: Kirill Tkhai <ktkhai@odin.com>
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Mike Galbraith <efault@gmx.de>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/55E444C8.3020402@odin.com
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 kernel/sched/core.c | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index c8382c2..b5f26e0 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -8167,14 +8167,6 @@ static void cpu_cgroup_exit(struct cgroup_subsys_state *css,
 			    struct cgroup_subsys_state *old_css,
 			    struct task_struct *task)
 {
-	/*
-	 * cgroup_exit() is called in the copy_process() failure path.
-	 * Ignore this case since the task hasn't ran yet, this avoids
-	 * trying to poke a half freed task state from generic code.
-	 */
-	if (!(task->flags & PF_EXITING))
-		return;
-
 	sched_move_task(task);
 }
 
-- 
1.9.1

