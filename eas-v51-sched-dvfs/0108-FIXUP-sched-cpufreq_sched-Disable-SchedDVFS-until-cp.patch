From 189dc1040be15571d06c4da2ef24210357fdb7ae Mon Sep 17 00:00:00 2001
From: Ricky Liang <jcliang@chromium.org>
Date: Wed, 2 Sep 2015 15:46:27 +0800
Subject: [PATCH 108/110] FIXUP: sched/cpufreq_sched: Disable SchedDVFS until
 cpufreq is fully initialized.

Signed-off-by: Ricky Liang <jcliang@chromium.org>
---
 kernel/sched/cpufreq_sched.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/kernel/sched/cpufreq_sched.c b/kernel/sched/cpufreq_sched.c
index 700def0..2a8062e 100644
--- a/kernel/sched/cpufreq_sched.c
+++ b/kernel/sched/cpufreq_sched.c
@@ -18,6 +18,7 @@
 
 static DEFINE_PER_CPU(unsigned long, pcpu_capacity);
 static DEFINE_PER_CPU(struct cpufreq_policy *, pcpu_policy);
+static DEFINE_PER_CPU(int, governor_started);
 
 /**
  * gov_data - per-policy data internal to the governor
@@ -150,6 +151,9 @@ void cpufreq_sched_set_cap(int cpu, unsigned long capacity)
 	struct gov_data *gd;
 	unsigned long capacity_max = 0;
 
+	if (!per_cpu(governor_started, cpu))
+		return;
+
 	/* update per-cpu capacity request */
 	per_cpu(pcpu_capacity, cpu) = capacity;
 
@@ -266,6 +270,10 @@ static int cpufreq_sched_start(struct cpufreq_policy *policy)
 	policy->governor_data = gd;
 	gd->policy = policy;
 	set_sched_energy_freq();
+
+	for_each_cpu(cpu, policy->cpus)
+		per_cpu(governor_started, cpu) = 1;
+
 	return 0;
 
 err:
@@ -276,6 +284,10 @@ err:
 static int cpufreq_sched_stop(struct cpufreq_policy *policy)
 {
 	struct gov_data *gd = policy->governor_data;
+	int cpu;
+
+	for_each_cpu(cpu, policy->cpus)
+		per_cpu(governor_started, cpu) = 0;
 
 	clear_sched_energy_freq();
 	if (cpufreq_driver_might_sleep()) {
@@ -318,6 +330,11 @@ struct cpufreq_governor cpufreq_gov_sched = {
 
 static int __init cpufreq_sched_init(void)
 {
+	int cpu;
+
+	for_each_cpu(cpu, cpu_possible_mask) {
+		per_cpu(governor_started, cpu) = 0;
+	}
 	return cpufreq_register_governor(&cpufreq_gov_sched);
 }
 
-- 
1.9.1

